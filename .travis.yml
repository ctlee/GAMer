notifications:
  email: false
  slack:
    secure: ilztqDylzgDwnh+AAHdrmHjgD4rjutJa5rh783H8HfW7KKY+RtHaAa+Z9V6uAbU3/fPk29fkCXRxT/scAI4Fn0TQ/Hi0alCs7ytNJg+2fbVcI5xWHbmJznOb0pQl0Gn6MGwouSyP9WvRtivtT5u+wlNR6yKycTmUI9qP3Fe7nA/k/WdRt5SHGjjprtYZYbBOg+9UStzubMuQj5hTBeDs78UyUbejSsZ0Cp9+OkTcugoEegwn0o9QdkvFGHF/hQ5bVGGNVAFUVOg+B4DFiw59MbsgIDZ663CXCTxUJ1I4uS3rI7LpnY2G8c5dKp9E2KDkM8sPKWzg4qeyj1POMPNDUbNYWIHBBK4NxrQ+PqW1nquxNTVsqYi2IXVmV2BWx9+SUS06YwDsjrCcQyAtnCzxn/tL3aX/8jyeN3yPwytJgDuj9IF8nIJZuuMgDOs1ZVa9fbL8ANBMcZMKIPCSwjO8670ULl5xKAWKGTY7HwzGLU3syQBwOX+eukf9zx2Y9qrsP1kJJT8YTOD45icJRAMPQQEiN20wxKh/V7Kz0ewc6LG8Bv1FyM6f+7ehNZvkwrStzJJ85JwDkPeTKKiBa3kuBQzE0CBm3/cTYCXgQEo3jggH1xPF8OkbYhuX8TrZjp3PBVCABto6V6OGILFA7Hhv6gK9eHxCSVOICPfWCfYXakY=

language: cpp

dist: xenial
sudo: false

# Don't shallow clone as this may break the versioning
git:
  depth: false


branches:
  only:
  - master
  - development

# BUILD MATRIX
matrix:
  fast_finish: true
  allow_failures:
  # These xcode versions have a llvm defect
  - os: osx
    osx_image: xcode9
  - os: osx
    osx_image: xcode9.1
  - os: osx
    osx_image: xcode9.2

  include:
  # OSX
  - os: osx
    osx_image: xcode8.3

  - os: osx
    osx_image: xcode9

  - os: osx
    osx_image: xcode9.1

  - os: osx
    osx_image: xcode9.2

  - os: osx
    osx_image: xcode9.3

  - os: osx
    osx_image: xcode9.4

  - os: osx
    osx_image: xcode10

  - os: osx
    osx_image: xcode10.1

  - os: osx
    osx_image: xcode10.2

  # LINUX GCC
  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5', 'ninja-build']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-6', 'ninja-build']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7', 'ninja-build']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8', 'ninja-build']

  # LINUX CLANG
  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
    addons:
      apt:
        sources: ['llvm-toolchain-xenial-7']
        packages: ['clang-7', 'ninja-build']

  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
    addons:
      apt:
        sources: ['llvm-toolchain-xenial-8']
        packages: ['clang-8', 'ninja-build']


before_install:
- |
   if [[ (-x $(which brew)) ]]; then
     brew update
     brew install cmake ninja
     brew upgrade cmake
     cmake --version
   fi
- if [[ "${MATRIX_EVAL}" != "" ]]; then eval ${MATRIX_EVAL}; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then pyenv global 3.7.1; fi

# Show OS/compiler version
- uname -a
- $CXX --version

install:
- mkdir build; cd build;
- cmake -DGETEIGEN=on -DGAMER_TEST=on -DBUILD_PYGAMER=on -GNinja ..
- cmake --build . --config Release

script:
- ctest -C Release -V -j