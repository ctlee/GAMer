
name: Testing and release

on:
  push:
    branches:
      - master
      - development
    tags:
      # The regex: /^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
      - 'v[0-9].[0-9]+.[0-9]+*'
  pull_request:
    branches: 
      - master
      - development

jobs:
  build_test:
    name: Setup, build, and test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        blender: [2.79, 2.83, 2.93]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get target py version
        id: python
        run: |
          pwd
          pythonver=$(python ./.github/scripts/blender_pyversion_lookup.py ${{ matrix.blender }})
          echo ::set-output name=version::$pythonver

      - name: Configure python version
        uses: actions/setup-python@v2
        with: 
          python-version: ${{ steps.python.outputs.version }}

      - name: Setup python libs
        id: pyexe
        run: |
          echo python --version
          python -m pip install pytest
          py_exe_path=$(which python)
          echo ::set-output name=path::$py_exe_path
      
      - name: Build and test
        run: |
          mkdir -p build && cd build;
          cmake -DCMAKE_BUILD_TYPE=RELEASE -DGETEIGEN=ON -DGETPYBIND11=ON -DGAMER_TESTS=on -DBUILD_BLENDGAMER=ON -DBLENDER_VERSION_OVERRIDE=${{ matrix.blender }} -DBUILD_PYGAMER=on -DPYTHON_EXECUTABLE:FILEPATH=${{ steps.pyexe.outputs.exe_path }} ..
          cmake --build . --config Release -j 4
          ctest -C Release -V -j 4

      - name: Get blendgamer filename
        id: pkg
        run: |
          pwd
          cd build
          zipfile=$(ls *.zip| basename)
          echo ::set-output name=filename::$zipfile

      - name: Stash blendgamer
        # Generate artifacts for all tagged versions
        # if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.pkg.outputs.filename }}
          path: build/plugin/blendgamer/

  stage_releases:
    runs-on: ubuntu-latest
    needs: [build_test]
    # Stage release for tagged versions
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Sync artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./

    - name: Display structure of downloaded files
      run: ls -R

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: |
          *.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
